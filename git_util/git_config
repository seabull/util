[user]
	name = Longjiang Yang
	email = Yanglj@gmail.com
[http]
	proxy = http://proxy-mdha.target.com:8080
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[hub]
	host = git.target.com
[url "https://github.com/"]
	insteadOf = git://github.com
[alias]
	co = checkout
	ci = commit
	last = log -1 HEAD
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s\\ [%cn]" --decorate --numstat
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s\\ [%cn]" --decorate --date=short
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s\\ [%cn]" --decorate --date=relative
	le = log --oneline --decorate
	filelog = log -u
	fl = log -u
	f = "!git ls-files | grep -i"
	lsalias = "!git config -l | grep alias | cut -c 7-"
	stash-unapply = "!git stash show -p | git apply -R"
	br = branch -av
	ba = branch -a -vv
	list-remote-branches = "!listRemoteBranches() { git branch -r | sed \"/->/d; s/ origin\\///g\"; }; listRemoteBranches"
        checkout-remote-branches = "!checkoutRemoteBranches() { for name in `git list-remote-branches`; do git checkout $name; done; }; checkoutRemoteBranches"
        clone-with-branches = "!cloneWithBranches() { git clone $1 $2; cd $2; git checkout-remote-branches; git remote rm origin }; cloneWithBranches"
[help]
	format = web
