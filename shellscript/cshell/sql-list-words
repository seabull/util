#!/usr/local/bin/perl -w
#------------------------------------------------------------------------------

use Getopt::Std ;

use POSIX qw( tmpnam ) ;

use IO::File ;

#------------------------------------------------------------------------------

use strict ;

use vars qw ( %words ) ;

#------------------------------------------------------------------------------

main:
{
  local $/ ;	# undefine record separator

  foreach my $file ( @ARGV )
  {
    parse_word_file ( $file ) ;
  }

  foreach my $key ( sort keys %words )
  {
    print $words{$key} . "\n" ;
  }
}

#------------------------------------------------------------------------------

sub parse_word_file
{
  my $file = $_[0] ;

  ( my $in = new IO::File ( $file, "r" ) )
    or usage("unable to open '%s' - %s",$file,$!) ;

  my $text = <$in> ;

  $in->close() ;

  while ( $text =~ m{ ("[^"\\]*(?:\\.[^"\\]*)*")	# 1 - quoted string	"..."
                    | ('[^'\\]*(?:\\.[^'\\]*)*')	# 2 - quoted string	'...'
                    | ([-][-][^\n]*)			# 3 - SQL comment	-- ...
                    | ([Rr][Ee][Mm][ \t][^\n]*)		# 4 - SQL comment	REM ...
                    | (/\*[^*]*\*+(?:[^/*][^*]*\*+)*/)	# 5 - C style comment	/* ... */
                    | ([0-9][\w_]*)			# 6 - word starting with numeric
                    | ([\w_]+)				# 7 - word starting with alpha or '_'
                    | (.|[\n])				# 8 - non-word or newline
                    }gx )
  {
    defined ( $7 ) && ( length($+) > 1 ) &&
      ( $words{ lc($+) } = $+ ) ;
  }
}

#------------------------------------------------------------------------------
 
sub usage
{
  *STDOUT = *STDERR ;

  printf "\n" ;
  printf "Error:  " . shift(@_) . "\n", @_ ;
  printf "\n" ;

  printf "Usage:  sql-list-words <file> [ ... ]\n" ;
  printf "\n" ;
  printf "- Reads words from <file>(s) and lists last occurance of\n" ;
  printf "  each word to stdout.\n" ;
  printf "\n" ;
  printf "- Comparisions are case-insensitive, output case-sensistive.\n" ;
  printf "\n" ;

  exit -1 ;
}

#------------------------------------------------------------------------------
